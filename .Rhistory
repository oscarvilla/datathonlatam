correlaciones <- cor(df_limpio[, c(2:ncol(df_limpio))])
heatmap(correlaciones)
library(corrplot)
corrplot(correlacions, order = "hclust", tl.cex = 0.6, tl.col = "black")
df_limpio <- df[, -c(4, 10, 15, 18, 23, 26, 30, 36, 40, 50)]
correlaciones <- cor(df_limpio[, c(2:ncol(df_limpio))])
heatmap(correlaciones)
library(corrplot)
corrplot(correlaciones, order = "hclust", tl.cex = 0.6, tl.col = "black")
corrplot(correlaciones, order = "original", tl.cex = 0.6, tl.col = "black")
library(qgraph)
qgraph(cor(correlaciones), shape="circle",
posCol="darkblue", negCol="darkred",
layout="spring", vsize=8)
df_limpio <- df[, -c(4, 10, 15, 18, 23, 26, 30, 36, 40, 50)]
correlaciones <- cor(df_limpio[, c(2:ncol(df_limpio))])
heatmap(correlaciones)
library(corrplot)
corrplot(correlaciones, order = "hclust", tl.cex = 0.6, tl.col = "black")
corrplot(correlaciones, order = "original", tl.cex = 0.6, tl.col = "black")
library(qgraph)
qgraph(cor(correlaciones), shape="circle",
posCol="darkblue", negCol="darkred",
layout="spring", vsize=8)
getwd()
setwd("~/Documents/datathonlatam") ## setting dir
library(readr)
arc <- list.files("./datasets/educacion_superior", pattern = ".csv") ## creating list files csv
acreditacion <- read_csv(paste("./datasets/educacion_superior", arc[1], sep = "/"))
names(acreditacion) <- c("departamento", "anio",
paste("acr", gsub("tecnica profesional", "tecpro", tolower(names(acreditacion)[3:8])), sep = "_") )
cobertura <- read_csv(paste("./datasets/educacion_superior", arc[2], sep = "/"))
names(cobertura) <- c("departamento", "anio", "cobertura" )
graduados <- read_csv(paste("./datasets/educacion_superior", arc[3], sep = "/"))
names(graduados) <- c("departamento", "anio",
paste("gra", gsub("tecnica profesional", "tecpro", tolower(names(graduados)[3:8])), sep = "_") )
matricula <- read_csv(paste("./datasets/educacion_superior", arc[4], sep = "/"))
names(matricula) <- c("departamento", "anio",
paste("matr", gsub("tecnica profesional", "tecpro", tolower(names(matricula)[3:8])), sep = "_") )
sector <- read_csv(paste("./datasets/educacion_superior", arc[5], sep = "/"))
names(sector) <- c("departamento", "anio", tolower(names(sector)[3:4]))
library(ggplot2)
ggplot(data = graduados, aes(x = anio, y = gra_tecpro, colour = departamento)) + geom_line()
ggplot(data = graduados, aes(x = anio, y = gra_tecnologica, colour = departamento)) + geom_line()
ggplot(data = graduados, aes(x = anio, y = gra_universitaria, colour = departamento)) + geom_line()
ggplot(data = graduados, aes(x = anio, y = gra_especializacion, colour = departamento)) + geom_line()
ggplot(data = graduados, aes(x = anio, y = gra_maestria, colour = departamento)) + geom_line()
ggplot(data = graduados, aes(x = anio, y = gra_doctorado, colour = departamento)) + geom_line()
educacion <- merge(merge(merge(merge(acreditacion, cobertura), graduados), matricula), sector)
head(educacion)
print("los departamentos que quedan son:")
sort(unique(educacion$departamento))
print("Y los años:")
sort(unique(educacion$anio))
departamentos <- sort(unique(educacion$departamento))
saveRDS(departamentos, "./departamentosRDS")
totalpib <- data.frame() ## empty data frame to fill
k <- 0 ## a counter for naming by department from departamentos var
departamentos <- readRDS("./departamentosRDS")
library(readxl) ## library needed to read xls
for(i in seq(from = 2, to = 66, by = 2)) { ## We'll read even sheets (by number, not by name)
pib <- read_excel("~/Documents/datathonlatam/datasets/Copia de PIB_Departamentos_2015provisional.xls",
sheet = i, skip = 5, range = "A7:Q59") ## read just a range of the sheet
pib <- pib[!is.na(pib[, 1]) & !is.na(pib[, 2]), c(1, 2:16)] ## delete NAs and keep 2010 to 2015
pib <- data.frame(t(pib)) ## transpose
k <- k + 1 ## increase 'iterator' of departamentos names
pib$departamento <- departamentos[k] ## namig the departamento
pib$anio <- rownames(pib) ## anio as value not just as rowname
pib <- pib[c(2:nrow(pib)), c(48:49, 1:47)] ## erasing first row and reordering cols-vars
totalpib <- rbind(totalpib, pib) ## stacking results in one data frame
}
rm(pib) ## erase inecessary data frame
totalpib[, 3:ncol(totalpib)] <- apply(totalpib[, 3:ncol(totalpib)], 2, as.integer) ## data as numeric
print("los departamentos que quedan son:")
sort(unique(totalpib$departamento))
print("Y los años:")
sort(unique(totalpib$anio))
library(readr)
dane <- read_csv("./datasets/censo 2005/proyeccion poblacion DANE 2005.csv")
dane$departamento <- gsub("NARIÑO", "NARINO", dane$departamento)
totaldane <- data.frame()
for( i in 1:nrow(dane)){
temp <- data.frame(departamento = dane[i, 1],
anio = seq(2010, 2014),
proy = as.numeric(dane[i, 2:6]))
totaldane <- rbind(totaldane, temp)
}
rm(list = c("dane", "temp"))
head(totaldane)
print("los departamentos que quedan son:")
sort(unique(totaldane$departamento))
print("Y los años:")
sort(unique(totaldane$anio))
df <- merge(merge(totaldane, totalpib), educacion)
df$departamento <- as.factor(df$departamento)
df$anio <- as.factor(df$anio)
str(df)
df_limpio <- df[, -c(4, 10, 15, 18, 23, 26, 30, 36, 40, 50)]
correlaciones <- cor(df_limpio[, c(2:ncol(df_limpio))])
View(df_limpio)
df_limpio <- df[, -c(4, 10, 15, 18, 23, 26, 30, 36, 40, 50)]
correlaciones <- cor(df_limpio[, c(3:ncol(df_limpio))])
heatmap(correlaciones)
library(corrplot)
corrplot(correlaciones, order = "hclust", tl.cex = 0.6, tl.col = "black")
corrplot(correlaciones, order = "original", tl.cex = 0.6, tl.col = "black")
library(qgraph)
qgraph(cor(correlaciones), shape="circle",
posCol="darkblue", negCol="darkred",
layout="spring", vsize=8)
corrplot(correlaciones, order = "original", tl.cex = 0.6, tl.col = "black")
?corrplot
library(corrplot)
corrplot(correlaciones, order = "hclust", tl.cex = 0.6, tl.col = "black")
corrplot(correlaciones, order = "original", tl.cex = 0.6, tl.col = "black", type = "upper")
library(corrplot)
corrplot(correlaciones, order = "hclust", tl.cex = 0.6, tl.col = "black")
corrplot(correlaciones, order = "original", tl.cex = 0.6, tl.col = "black", type = "upper")
corrplot(correlaciones, order = "original", tl.cex = 0.6, tl.col = "black", type = "upper")
library(corrplot)
corrplot(correlaciones, order = "hclust", tl.cex = 0.6, tl.col = "black")
corrplot(correlaciones, order = "original", tl.cex = 0.6, tl.col = "black", type = "lower")
library(corrplot)
corrplot(correlaciones, order = "hclust", tl.cex = 0.6, tl.col = "black")
corrplot(correlaciones, order = "original", tl.cex = 0.6, tl.col = "black", type = "lower")
corrplot(correlaciones, order = "original", tl.cex = 0.6, tl.col = "black", type = "lower")
View(df_limpio)
View(df_limpio)
correlate <- (df_limpio[, c(3:40)], df_limpio[, c(41:61)])
correlate <- cor(df_limpio[, c(3:40)], df_limpio[, c(41:61)])
corrplot(correlate, order = "original", tl.cex = 0.6, tl.col = "black", type = "lower")
correlate <- cor(df_limpio[, c(3:40)], df_limpio[, c(41:61)])
library(corrplot)
corrplot(correlate, order = "original", tl.cex = 0.6, tl.col = "black", type = "lower")
corrplot(correlate, order = "original", tl.cex = 0.6, tl.col = "black")
correlate <- cor(df_limpio[, c(3:40)], df_limpio[, c(41:61)])
library(corrplot)
corrplot(correlate, order = "original", tl.cex = 0.6, tl.col = "black", type = "lower")
corrplot(correlate, order = "original", tl.cex = 0.6, tl.col = "black")
correlate <- cor(df_limpio[, c(3:40)], df_limpio[, c(41:61)])
library(corrplot)
corrplot(correlate, order = "original", tl.cex = 0.6, tl.col = "black", type = "lower")
library(qgraph)
qgraph(cor(correlate), shape="circle",
posCol="darkblue", negCol="darkred",
layout="spring", vsize=8)
View(correlate)
heatmap(correlate)
?heatmap
setwd("~/Documents/datathonlatam") ## setting dir
library(readr)
arc <- list.files("./datasets/educacion_superior", pattern = ".csv") ## creating list files csv
acreditacion <- read_csv(paste("./datasets/educacion_superior", arc[1], sep = "/"))
names(acreditacion) <- c("departamento", "anio",
paste("acr", gsub("tecnica profesional", "tecpro", tolower(names(acreditacion)[3:8])), sep = "_") )
View(acreditacion)
sort(unique(acreditacion$departamento))
departamentos <- sort(unique(acreditacion$departamento))
departamentos
sort(unique(acreditacion$anio))
saveRDS(departamentos, "./departamentosRDS")
departamentos <- sort(unique(acreditacion$departamento))
print("Tenemos los siguientes departamentos: \n")
departamentos
sort(unique(acreditacion$anio))
saveRDS(departamentos, "./departamentosRDS")
departamentos <- sort(unique(acreditacion$departamento))
print("Tenemos los siguientes departamentos:")
departamentos
print("Para los años:")
sort(unique(acreditacion$anio))
saveRDS(departamentos, "./departamentosRDS")
totalpib <- data.frame() ## empty data frame to fill
k <- 0 ## a counter for naming by department from departamentos var
departamentos <- readRDS("./departamentosRDS")
library(readxl) ## library needed to read xls
for(i in seq(from = 2, to = 66, by = 2)) { ## We'll read even sheets (by number, not by name)
pib <- read_excel("~/Documents/datathonlatam/datasets/Copia de PIB_Departamentos_2015provisional.xls",
sheet = i, skip = 5, range = "A7:Q59") ## read just a range of the sheet
pib <- pib[!is.na(pib[, 1]) & !is.na(pib[, 2]), c(1, 2:16)] ## delete NAs and keep 2010 to 2015
pib <- data.frame(t(pib)) ## transpose
k <- k + 1 ## increase 'iterator' of departamentos names
pib$departamento <- departamentos[k] ## namig the departamento
pib$anio <- rownames(pib) ## anio as value not just as rowname
pib <- pib[c(2:nrow(pib)), c(48:49, 1:47)] ## erasing first row and reordering cols-vars
totalpib <- rbind(totalpib, pib) ## stacking results in one data frame
}
rm(pib) ## erase inecessary data frame
totalpib[, 3:ncol(totalpib)] <- apply(totalpib[, 3:ncol(totalpib)], 2, as.integer) ## data as numeric
print("los departamentos que quedan son:")
sort(unique(totalpib$departamento))
print("Y los años:")
sort(unique(totalpib$anio))
library(readr)
dane <- read_csv("./datasets/censo 2005/proyeccion poblacion DANE 2005.csv")
dane$departamento <- gsub("NARIÑO", "NARINO", dane$departamento)
totaldane <- data.frame()
for( i in 1:nrow(dane)){
temp <- data.frame(departamento = dane[i, 1],
anio = seq(2010, 2014),
proy = as.numeric(dane[i, 2:6]))
totaldane <- rbind(totaldane, temp)
}
rm(list = c("dane", "temp"))
head(totaldane)
print("los departamentos que quedan son:")
sort(unique(totaldane$departamento))
print("Y los años:")
sort(unique(totaldane$anio))
df <- merge(merge(totaldane, totalpib), acreditacion)
df$departamento <- as.factor(df$departamento)
df$anio <- as.factor(df$anio)
str(df)
View(totalpib)
library(readr)
dane <- read_csv("./datasets/censo 2005/proyeccion poblacion DANE 2005.csv")
View(dane)
library(readr)
dane <- read_csv("./datasets/censo 2005/proyeccion poblacion DANE 2005.csv")
dane$departamento <- gsub("NARIÑO", "NARINO", dane$departamento)
totaldane <- data.frame()
for( i in 1:nrow(dane)){
temp <- data.frame(departamento = dane[i, 1],
anio = seq(2010, 2014),
proy = as.numeric(dane[i, 2:6]))
totaldane <- rbind(totaldane, temp)
}
rm(list = c("dane", "temp"))
head(totaldane)
print("los departamentos que quedan son:")
sort(unique(totaldane$departamento))
print("Y los años:")
sort(unique(totaldane$anio))
library(readr)
dane <- read_csv("./datasets/censo 2005/proyeccion poblacion DANE 2005.csv")
View(dane)
dane$departamento <- gsub("NARIÑO", "NARINO", dane$departamento)
dane <- read_csv("./datasets/censo 2005/proyeccion poblacion DANE 2005.csv")
View(dane)
dane <- read_csv("./datasets/censo 2005/proyeccion poblacion DANE 2005.csv")
View(dane)
sort(unique(dane$departamento))
i <- 1
rm(i)
library(readr)
dane <- read_csv("./datasets/censo 2005/proyeccion poblacion DANE 2005.csv")
totaldane <- data.frame()
for( i in 1:nrow(dane)){
temp <- data.frame(departamento = dane[i, 1],
anio = seq(1985, 2020),
proy = as.numeric(dane[i, 2:ncol(dane)]))
totaldane <- rbind(totaldane, temp)
}
rm(list = c("dane", "temp"))
head(totaldane)
print("los departamentos que quedan son:")
sort(unique(totaldane$departamento))
print("Y los años:")
sort(unique(totaldane$anio))
df <- merge(merge(totaldane, totalpib), acreditacion)
df$departamento <- as.factor(df$departamento)
df$anio <- as.factor(df$anio)
str(df)
df <- merge(merge(totaldane, totalpib), acreditacion)
df$departamento <- as.factor(df$departamento)
str(df)
df <- merge(merge(totaldane, totalpib), acreditacion)
df$departamento <- as.factor(df$departamento)
df$proy <- as.integer(df$proy)
str(df)
View(df)
df_limpio <- df[, -c(4, 10, 15, 18, 23, 26, 30, 36, 40, 50)]
View(df_limpio)
df_limpio <- df[, -c(4, 10, 15, 18, 23, 26, 30, 36, 40, 50)]
correlaciones <- cor(df_limpio[, c(2:ncol(df_limpio))])
heatmap(correlaciones)
df_limpio <- df[, -c(4, 10, 15, 18, 23, 26, 30, 36, 40, 50)]
correlaciones <- cor(df_limpio[, c(2:ncol(df_limpio))])
df_limpio <- df[, -c(4, 10, 15, 18, 23, 26, 30, 36, 40, 50)]
correlaciones <- cor(df_limpio[, c(2:ncol(df_limpio))])
library(corrplot)
corrplot(correlaciones, order = "hclust", tl.cex = 0.6, tl.col = "black")
corrplot(correlaciones, order = "original", tl.cex = 0.6, tl.col = "black", type = "lower")
corrplot(correlaciones, order = "original", tl.cex = 0.6, tl.col = "black", type = "lower")
corrplot(correlaciones, order = "original", tl.cex = 0.6, tl.col = "black", type = "lower")
library(corrplot)
corrplot(correlaciones, order = "hclust", tl.cex = 0.6, tl.col = "black")
corrplot(correlaciones, order = "original", tl.cex = 0.6, tl.col = "black", type = "lower")
library(corrplot)
corrplot(correlaciones, order = "hclust", tl.cex = 0.6, tl.col = "black")
corrplot(correlaciones, order = "original", tl.cex = 0.6, tl.col = "black", type = "lower")
library(corrplot)
corrplot(correlaciones, order = "original", tl.cex = 0.6, tl.col = "black", type = "lower")
library(qgraph)
qgraph(cor(correlaciones), shape="circle",
posCol="darkblue", negCol="darkred",
layout="spring", vsize=8)
qgraph(cor(correlaciones), shape="circle",
posCol="darkblue", negCol="darkred",
layout="spring", vsize=8)
correlate <- cor(df_limpio[, c(2:40)], df_limpio[, c(41:ncol(df_limpio))])
library(corrplot)
corrplot(correlate, order = "original", tl.cex = 0.6, tl.col = "black", type = "lower")
library(qgraph)
qgraph(cor(correlate), shape="circle",
posCol="darkblue", negCol="darkred",
layout="spring", vsize=8)
correlate <- cor(df_limpio[, c(2:40)], df_limpio[, c(41:ncol(df_limpio))])
library(corrplot)
corrplot(correlate, order = "original", tl.cex = 0.6, tl.col = "black", type = "lower")
library(qgraph)
qgraph(cor(correlate), shape="circle",
posCol="darkblue", negCol="darkred",
layout="spring", vsize=8)
correlate <- cor(df_limpio[, c(2:40)], df_limpio[, c(41:46)])
library(corrplot)
corrplot(correlate, order = "original", tl.cex = 0.6, tl.col = "black", type = "lower")
library(qgraph)
qgraph(cor(correlate), shape="circle",
posCol="darkblue", negCol="darkred",
layout="spring", vsize=8)
correlate <- cor(df_limpio[, c(2:40)], df_limpio[, c(41:46)])
library(corrplot)
corrplot(correlate, order = "original", tl.cex = 0.6, tl.col = "black", type = "lower")
corrplot(correlate, order = "original", tl.cex = 0.6, tl.col = "black", type = "lower")
correlate <- cor(df_limpio[, c(41:46)], df_limpio[, c(2:40)])
library(corrplot)
corrplot(correlate, order = "original", tl.cex = 0.6, tl.col = "black", type = "lower")
correlate <- cor(df_limpio[, c(41:46)], df_limpio[, c(2:40)])
library(corrplot)
corrplot(correlate, order = "original", tl.cex = 0.6, tl.col = "black", type = "lower")
correlate <- cor(df_limpio[, c(41:46)], df_limpio[, c(2:40)])
library(corrplot)
corrplot(correlate, order = "original", tl.cex = 0.6, tl.col = "black", type = "lower")
library(qgraph)
qgraph(cor(correlate), shape="circle",
posCol="darkblue", negCol="darkred",
layout="spring", vsize=8)
corrplot(correlate, order = "original", tl.cex = 0.6, tl.col = "black", type = "lower")
correlate <- cor(df_limpio[, c(41:46)], df_limpio[, c(2:40)])
View(correlate)
?heat.colors
?heatmap
heatmap(correlate, reorderfun = NULL)
library(corrplot)
corrplot(correlate, order = "original", tl.cex = 0.6, tl.col = "black", type = "lower")
heatmap.2(correlate,dendrogram='none', Rowv=FALSE, Colv=FALSE,trace='none')
heatmap(correlate,dendrogram='none', Rowv=FALSE, Colv=FALSE,trace='none')
install.packages("RColorBrewer")
library(RColorBrewer)
heatmap(correlate, dendrogram='none', Rowv=FALSE, Colv=FALSE,trace='none')
correlate <- cor(df_limpio[, c(41:46)], df_limpio[, c(2:40)])
library(RColorBrewer)
heatmap(correlate, dendrogram='none', Rowv=FALSE, Colv=FALSE,trace='none')
library(corrplot)
corrplot(correlate, order = "original", tl.cex = 0.6, tl.col = "black", type = "lower")
library(qgraph)
qgraph(cor(correlate), shape="circle",
posCol="darkblue", negCol="darkred",
layout="spring", vsize=8)
heatmap(correlate, dendrogram='none', Rowv=FALSE, Colv=FALSE,trace='none')
heatmap(correlate, Rowv=FALSE, Colv=FALSE,trace='none')
heatmap(correlate, dendrogram='none')
heatmap2(correlate, dendrogram='none', Rowv=FALSE, Colv=FALSE,trace='none')
heatmap.2(correlate, dendrogram='none', Rowv=FALSE, Colv=FALSE,trace='none')
library(RColorBrewer)
?RColorBrewer
correlate <- cor(df_limpio[, c(41:46)], df_limpio[, c(2:40)])
library(RColorBrewer)
heatmap.2(correlate, dendrogram='none', Rowv=FALSE, Colv=FALSE,trace='none')
install.packages("gplots")
library(glots)
library(gplots)
heatmap.2(correlate, dendrogram='none', Rowv=FALSE, Colv=FALSE,trace='none')
correlate <- cor(df_limpio[, c(41:46)], df_limpio[, c(2:40)])
library(gplots)
heatmap.2(correlate, dendrogram='none', Rowv=FALSE, Colv=FALSE,trace='none')
correlate <- cor(df_limpio[, c(41:46)], df_limpio[, c(2:40)])
library(gplots)
heatmap.2(correlate, dendrogram='none', Rowv=FALSE, Colv=FALSE,trace='none')
library(corrplot)
corrplot(correlate, order = "original", tl.cex = 0.6, tl.col = "black", type = "lower")
library(qgraph)
qgraph(cor(correlate), shape="circle",
posCol="darkblue", negCol="darkred",
layout="spring", vsize=8)
?heatmap.2
heatmap.2(correlate, dendrogram='none', Rowv=FALSE, Colv=FALSE,trace='none', margins = c(10, 4))
heatmap.2(correlate, dendrogram='none', Rowv=FALSE, Colv=FALSE,trace='none', margins = c(20, 4))
heatmap.2(correlate, dendrogram='none', Rowv=FALSE, Colv=FALSE,trace='none', margins = c(20, 4))
heatmap.2(correlate, dendrogram='none', Rowv=FALSE, Colv=FALSE,trace='none', margins = c(15, 4))
heatmap.2(correlate, dendrogram='none', Rowv=FALSE, Colv=FALSE,trace='none', margins = c(12, 4))
heatmap.2(correlate, dendrogram='none', Rowv=FALSE, Colv=FALSE,trace='none', margins = c(10, 4))
heatmap.2(correlate, dendrogram='none', Rowv=FALSE, Colv=FALSE,trace='none', margins = c(5, 4))
heatmap.2(correlate, dendrogram='none', Rowv=FALSE, Colv=FALSE,trace='none', margins = c(8, 3))
correlate <- cor(df_limpio[, c(41:46)], df_limpio[, c(2:40)])
library(gplots)
heatmap.2(correlate, dendrogram='none', Rowv=FALSE, Colv=FALSE,trace='none', margins = c(8, 3))
correlate <- cor(df_limpio[, c(41:46)], df_limpio[, c(2:40)])
library(gplots)
heatmap.2(correlate, dendrogram='none', Rowv=FALSE, Colv=FALSE,trace='none', margins = c(20, 3))
correlate <- cor(df_limpio[, c(41:46)], df_limpio[, c(2:40)])
library(gplots)
heatmap.2(correlate, dendrogram='none', Rowv=FALSE, Colv=FALSE,trace='none', margins = c(0, 3))
correlate <- cor(df_limpio[, c(41:46)], df_limpio[, c(2:40)])
library(gplots)
heatmap.2(correlate, dendrogram='none', Rowv=FALSE, Colv=FALSE,trace='none', margins = c(4, 10))
correlate <- cor(df_limpio[, c(41:46)], df_limpio[, c(2:40)])
library(gplots)
heatmap.2(correlate, dendrogram='none', Rowv=FALSE, Colv=FALSE,trace='none', margins = c(4, 15))
correlate <- cor(df_limpio[, c(41:46)], df_limpio[, c(2:40)])
library(gplots)
heatmap.2(correlate, dendrogram='none', Rowv=FALSE, Colv=FALSE,trace='none', margins = c(4, 13))
heatmap.2(correlate, dendrogram='none', Rowv=FALSE, Colv=FALSE,trace='none', margins = c(4, 13))
View(correlate)
max(correlate)
which.max(correlate)
dim(correlate)
6 * 39
5 * 39
correlate <- cor(df_limpio[, c(41:46)], df_limpio[, c(2:40)])
library(gplots)
heatmap.2(correlate, dendrogram='none', Rowv=FALSE, Colv=FALSE,trace='none', margins = c(4, 13))
correlate <- cor(df_limpio[, c(41:46)], df_limpio[, c(2:40)])
library(gplots)
heatmap.2(correlate, dendrogram='none', Rowv=FALSE, Colv=FALSE,trace='none', margins = c(4, 13))
correlate
library(caret)
nearZeroVar(df_limpio)
names(df_limpio)
acr_tecpro <- df_limpio[, c(1:41)]
model <- lm(acr_tecpro ~ ., data = acr_tecpro)
summary(model)
acr_tecpro <- df_limpio[, c(2:41)]
model <- lm(acr_tecpro ~ ., data = acr_tecpro)
summary(model)
View(acr_tecpro)
df_limpio <- df[, -c(4, 10, 15, 18, 23, 26, 30, 36, 40, 48:50)]
correlaciones <- cor(df_limpio[, c(2:ncol(df_limpio))])
library(corrplot)
corrplot(correlaciones, order = "original", tl.cex = 0.6, tl.col = "black", type = "lower")
library(qgraph)
qgraph(cor(correlaciones), shape="circle",
posCol="darkblue", negCol="darkred",
layout="spring", vsize=8)
correlate <- cor(df_limpio[, c(41:46)], df_limpio[, c(2:40)])
View(df_limpio)
correlate <- cor(df_limpio[, c(39:44)], df_limpio[, c(2:38)])
library(gplots)
heatmap.2(correlate, dendrogram='none', Rowv=FALSE, Colv=FALSE,trace='none', margins = c(4, 13))
correlate
library(corrplot)
corrplot(correlaciones, order = "original", tl.cex = 0.6, tl.col = "black", type = "lower")
library(qgraph)
qgraph(cor(correlaciones), shape="circle",
posCol="darkblue", negCol="darkred",
layout="spring", vsize=8)
library(qgraph)
qgraph(cor(correlaciones), shape="circle",
posCol="darkblue", negCol="darkred",
layout="spring", vsize=8)
correlate <- cor(df_limpio[, c(39:44)], df_limpio[, c(2:38)])
library(gplots)
heatmap.2(correlate, dendrogram='none', Rowv=FALSE, Colv=FALSE,trace='none', margins = c(4, 13))
correlate
acr_tecpro <- df_limpio[, c(1:41)]
model <- lm(acr_tecpro ~ ., data = acr_tecpro)
summary(model)
View(df_limpio)
acr_tecpro <- df_limpio[, c(1:39)]
model <- lm(acr_tecpro ~ ., data = acr_tecpro)
summary(model)
acr_tecpro <- df_limpio[, c(2:39)]
model <- lm(acr_tecpro ~ ., data = acr_tecpro)
summary(model)
model$model
View(acr_tecpro)
model$residuals
plot(model$residuals)
plot(model$fitted.values)
plot(model$fitted.values, acr_tecpro$acr_tecpro)
abline(coef = c(0, 1))
library(caret)
modelrf <- train(acr_tecpro ~ ., data = acr_tecpro, method = "rf")
summary(modelrf)
plot(modelrf)
modelrf$results
modelrf$pred
View(acr_tecpro)
predict(modelrf, newdata = data.frame(acr_tecpro[, -c(38)]))
plot(acr_tecpro$acr_tecpro, predict(modelrf, newdata = data.frame(acr_tecpro[, -c(38)])))
abline(coef = c(0,1))
acr_tecpro <- df_limpio[, c(2:39)]
model <- lm(acr_tecpro ~ ., data = acr_tecpro)
summary(model)
plot(acr_tecpro$acr_tecpro, predict(model, newdata = data.frame(acr_tecpro[, -c(38)])))
abline(coef = c(0, 1))
acr_tecpro <- df_limpio[, c(2:39)]
model <- lm(acr_tecpro ~ ., data = acr_tecpro)
summary(model)
plot(acr_tecpro$acr_tecpro, predict(model, newdata = data.frame(acr_tecpro[, -c(38)])))
abline(coef = c(0, 1))
plot(acr_tecpro$acr_tecpro, predict(modelrf, newdata = data.frame(acr_tecpro[, -c(38)])))
abline(coef = c(0, 1))
plot(acr_tecpro$acr_tecpro, predict(modelrf, newdata = data.frame(acr_tecpro[, -c(38)])))
abline(coef = c(0, 1))
plot(acr_tecpro$acr_tecpro, predict(modelrf, newdata = data.frame(acr_tecpro[, -c(38)])))
abline(coef = c(0, 1))
library(caret)
modelrf <- train(acr_tecpro ~ ., data = acr_tecpro, method = "rf")
plot(acr_tecpro$acr_tecpro, predict(modelrf, newdata = data.frame(acr_tecpro[, -c(38)])))
abline(coef = c(0, 1))
